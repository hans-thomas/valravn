<?php

    namespace App\Models\{{MODEL::NAMESPACE}};

	use App\Models\Contracts\EntityClasses;
	use App\Models\Contracts\Filterable;
	use App\Models\Contracts\Loadable;
	use App\Models\Contracts\ResourceCollectionable;
	use App\Models\Traits\Paginatable;
	use App\Models\ValravnModel;
	use App\Repositories\Contracts\Repository;
	use Hans\Valravn\Http\Resources\Contracts\ValravnJsonResource;
	use Hans\Valravn\Http\Resources\Contracts\ValravnResourceCollection;
	use Hans\Valravn\Services\Contracts\Service;
	use Illuminate\Database\Eloquent\Factories\HasFactory;

    class {{MODEL::CLASS}} extends ValravnModel implements Filterable, Loadable, ResourceCollectionable, EntityClasses {
        use HasFactory;
        use Paginatable;

        protected $table = '{{MODEL::TABLE}}';
        protected $fillable = [ ];

        public function getForeignKey() {
            return '{{MODEL::FOREIGNKEY}}';
        }

        public function getRepository(): Repository {
            // TODO: Implement getRepository() method.
        }

        public function getService(): Service {
            // TODO: Implement getService() method.
        }

        public function getRelationsService(): Service {
            // TODO: Implement getRelationsService() method.
        }

        public function getFilterableAttributes(): array {
            // TODO: Implement getFilterableAttributes() method.
        }

        public function getLoadableRelations(): array {
            // TODO: Implement getLoadableRelations() method.
        }

        public static function getResource(): ValravnJsonResource {
            // TODO: Implement getResource() method.
        }

        public function toResource(): ValravnJsonResource {
            // TODO: Implement toResource() method.
        }

        public static function getResourceCollection(): ValravnResourceCollection {
            // TODO: Implement getResourceCollection() method.
        }
    }
